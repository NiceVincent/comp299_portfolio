<div class="bg">
    <div class="bg-img" style="width: 100%; height:800px;"></div>
    
    <div class='about-container'>
        <div class="col-md-6">
            <h1>Vincent Tu</h1>
            <p class="subtitle">いっしょけんめい / Software Craftsmen</p>

            <div class="col-md-12 statement">
              <h3>mission statement</h3>
              <p>Empowering users through intuitive and efficient software solutions, driven by a passion for innovation and customer satisfaction.</p>
            </div>
        </div>
        <div class="col-md-6" style="padding-left: 20px; margin-top:50px; color: white;">
            <span id='job-title'></span>
            <div class='title-underscore' id='underscore'>&#95;</div>
        </div>
    </div>
</div>


<style>
.bg-img {
  background-image: url('/images/home-bg.jpg');
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: center;
  background-size: cover;
}

.subtitle {
  font-size: 20px;
}

.statement {
  margin-top: 35px;
  font-size: 20px;
}

.hidden {
  opacity:0;
}

.about-container {
  font-size:3em;
  text-align:center;
  height:300px;
  display:block;
  position:absolute;
  color:white;
  top:15%;
  bottom:0;
  left: 15%;
  right:0;
  margin:auto;
  display: flex;
}

.title-underscore {
  display:inline-block;
  position:relative;
  top:-0.14em;
  left:10px;
}
</style>

<script>
const dynamicDisplayText = (words) => {
  let titleDom = document.getElementById('job-title');
  let letterCount = 1;
  let x = 1;
  let waiting = false;
  
  // animation: dynamic display the typing effect of job titles
  setInterval(() => {
    if (letterCount === 0 && waiting === false) { // init, and start or change direction to type
      waiting = true;
      titleDom.innerHTML = words[0].substring(0, letterCount)
      setTimeout(() => {
        const usedWord = words.shift();
        words.push(usedWord);
        x = 1;
        letterCount += x;
        waiting = false;
      }, 1000);
    } else if (letterCount === words[0].length + 1 && waiting === false) { // start or change direction to delete
      waiting = true;
      setTimeout(() => {
        x = -1;
        letterCount += x;
        waiting = false;
      }, 1000);
    } else if (waiting === false) { // increment case (typing or deleting)
      titleDom.innerHTML = words[0].substring(0, letterCount)
      letterCount += x;
    }
  }, 120)

  // animation: control the flashing effect of the underscore cursor
  const underscoreDom = document.getElementById('underscore');
  let visible = true;
  setInterval(() => {
    underscoreDom.className = visible ? 
      'title-underscore hidden' : 'title-underscore';
    visible = !visible
  }, 400);

}
dynamicDisplayText(['Backend Engineer', 'System Architect', 'SRE', 'Tech Consultant', 'ML Engineer']);
</script>